[tool.poetry]
name = "python_template"
version = "0.1.0"
description = ""
authors = ["r-spiewak <63987228+r-spiewak@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "python_template", from = "src"}]
include = ["src/python_template/config/*.yaml"]

[tool.poetry.dependencies]
python = "^3.11"
typer = "^0.12.3"
pandas = "^2.2.2"
pytest-env = "^1.1.5"
pyyaml = "^6.0.2"
pydantic = "^2.11.7"

[tool.poetry.group.dev.dependencies]
autoflake = "^2.2.1"
isort = "^5.13.2"
black = "^24.2.0"
mypy = "^1.8.0"
pylint = "^3.0.3"
pytest = "^8.0.0"
coverage = "^7.4.1"
pre-commit = "^3.6.1"
pytest-testdox = "^3.1.0"
pytest-mock = "^3.14.0"
types-pyyaml = "^6.0.12.20250516"

[tool.black]
line-length = 79
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
  | \.git
  | __pycache__
  | \.tox
  | \venv
  | \.venv
)/
'''

[tool.isort]
profile = "black"
line_length = 79
skip_glob = [
  '*.parquet'
]
filter_files = true
skip_gitignore = true

[tool.mypy]
exclude = [
  '\.yaml$',
  '\.yml$',
  '\.toml$',
  '\.venv'
]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
addopts = "--basetemp=/tmp/pytest"

[tool.coverage.run]
source = ["src", "tests"]
omit = ["tests/**/conftest.py", "tests/*"]
# For avoiding sqlite3 concurrency issues on CIFS drives:
data_file = "/tmp/python_template/.coverage"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    "if DEBUG_PRINT:",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.poetry.scripts]
python-template = 'python_template.run:run'
python_template = 'python_template.run:run'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
